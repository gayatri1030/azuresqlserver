
provider "azurerm" {
  alias = "vulnerability"
  subscription_id            = var.sql_vulnerability_assessment_storage_account_subscription != "" ? var.sql_vulnerability_assessment_storage_account_subscription : var.subscription_id
  tenant_id                  = var.tenant_id
  client_id                  = var.client_id
  client_secret              = var.client_secret
  skip_provider_registration = true
  features {}
}

data "azurerm_storage_account" "vulnerability" {
  provider            = azurerm.vulnerability
  count               = var.sql_vulnerability_assessment_enabled ? 1 : 0
  name                = var.sql_vulnerability_assessment_storage_account_name
  resource_group_name = var.sql_vulnerability_assessment_storage_account_resource_group_name
}

resource "azurerm_mssql_server_vulnerability_assessment" "example" {
  depends_on = [
    azurerm_mssql_server.db-server,
    azurerm_mssql_database.db,
    azurerm_mssql_server_security_alert_policy.security-alert-policy
  ]
  count                           = var.sql_vulnerability_assessment_enabled ? 1 : 0
  server_security_alert_policy_id = azurerm_mssql_server_security_alert_policy.security-alert-policy.id
  storage_container_path          = "${data.azurerm_storage_account.vulnerability[*].primary_blob_endpoint}${var.sql_vulnerability_assessment_storage_container_name}"
  storage_account_access_key      = data.azurerm_storage_account.vulnerability[*].primary_access_key

  recurring_scans {
    enabled                   = true
    email_subscription_admins = false
    emails                    = var.sql_vulnerability_assessment_email_list
  }
}

